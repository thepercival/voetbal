# process: maxNrOfBatchGames laten beginnen op 1
# dan eerst maxNrOfGamesInARow verlagen totdat er een fail of een timeout is
# daarna maxNrOfBatchGames verhogen!
# als er niets is, moet er een sub optimale planning worden gemaakt

Voetbal\Planning:
  type: entity
  repositoryClass: Voetbal\Planning\Repository
  table: plannings
  id:
    id:
      type: integer
      generator:
        strategy: AUTO
  fields:
    minNrOfBatchGames:
      type: smallint
      nullable: false
      unique: false
    maxNrOfBatchGames:
      type: smallint
      nullable: false
      unique: false
    maxNrOfGamesInARow:
      type: smallint
      nullable: false
      unique: false
    createdDateTime:
      type: datetime_immutable
      nullable: false
      unique: false
    timeoutSeconds:
      type: integer
      nullable: true
      unique: false
    state:
      type: smallint
      nullable: false
      unique: false # failed, timout, success, successfinal
  manyToOne:
    input:
      targetEntity: Voetbal\Planning\Input
      joinColumn:
        name: inputid
        referencedColumnName: id
        nullable: false
        onDelete: CASCADE
      # cascade: [ persist ]
  oneToMany:
    games:
      targetEntity: Voetbal\Planning\Game
      mappedBy: planning
      cascade: [ persist, remove ]
  uniqueConstraints:
    number_v_idx:
      columns: [ inputid, minNrOfBatchGames, maxNrOfBatchGames, maxNrOfGamesInARow ]

